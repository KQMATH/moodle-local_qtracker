{"version":3,"sources":["../src/questions_table.js"],"names":["QuestionsTable","courseid","init","hidden","context","close","Templates","render","then","html","js","replaceNodeContents","window","showIssuesInPane","id","state","empty","addClass","loadQuestionData","questionData","question","questionEditUrl","getQuestionEditUrl","link","attr","name","loadIssues","issuesResponse","issues","lol","userids","Set","map","issue","userid","loadUsersData","usersData","promises","forEach","issueData","userData","find","push","addIssueItem","$","when","apply","done","removeClass","each","arguments","index","argument","appendNodeContents","catch","e","console","error","bind","closeIssuesPane","toggleClass","issueurl","url","relativeUrl","issueid","userurl","course","paneContext","profileimageurl","profileimageurlsmall","fullname","timecreated","title","description","criteria","key","value","Ajax","call","methodname","args","issuesData","ids","field","values","questionid","returnurl","encodeURIComponent","location","pathname","search","editurl","doc","DOMParser","parseFromString","documentElement","textContent"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manager for managing table of questions with issues.\n *\n * @module     local_qtracker/IssueManager\n * @class      IssueManager\n * @package    local_qtracker\n * @author     Andr√© Storhaug <andr3.storhaug@gmail.com>\n * @copyright  2020 NTNU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport Ajax from 'core/ajax';\nimport url from 'core/url';\n/**\n * Constructor\n * @constructor\n * @param {String} selector used to find triggers for the new group modal.\n * @param {int} contextid\n *\n * Each call to init gets it's own instance of this class.\n */\nclass QuestionsTable {\n    courseid = null;\n\n    constructor(courseid) {\n        this.courseid = courseid;\n\n        this.init();\n    }\n\n    async init() {\n        var hidden = true;\n\n        let context = {\n            close: {\n                \"key\": \"fa-times\",\n                \"title\": \"Close\",\n                \"alt\": \"Close pane\",\n                \"extraclasses\": \"\",\n                \"unmappedIcon\": false\n            }\n        };\n\n        await Templates.render('local_qtracker/issues_pane', context).then((html, js) => {\n            Templates.replaceNodeContents('#questions-table-sidebar', html, js);\n        });\n\n        window.showIssuesInPane = async function (id, state = null) {\n            $('.issues-pane-content .issues').empty();\n            $('.issues-pane-content .loading').addClass(\"show\");\n\n            // Get question title.\n            let questionData = await this.loadQuestionData(id)\n            let question = questionData.question;\n            let questionEditUrl = this.getQuestionEditUrl(this.courseid, id);\n            let link = $('<a></a>').attr(\"href\", questionEditUrl).html(question.name + \" #\" + question.id);\n            $('.issues-pane-title').html(link);\n\n            // Get issues data.\n            let issuesResponse = await this.loadIssues(id, state);\n            let issues = issuesResponse.issues;\n\n            if (hidden) lol();\n\n            // Get users data.\n            let userids = [...new Set(issues.map(issue => issue.userid))];\n            let usersData = await this.loadUsersData(userids);\n\n            // Render issue items.\n            let promises = []\n            issues.forEach(async issueData => {\n                let userData =  usersData.find( ({ id }) => id === issueData.userid );\n                promises.push(this.addIssueItem(issueData, userData));\n            });\n\n            // When all issue item promises are resolved.\n            $.when.apply($, promises).done(function () {\n                $('.issues-pane-content .loading').removeClass(\"show\");\n                $.each(arguments, (index, argument) => {\n                    Templates.appendNodeContents('.issues-pane-content .issues', argument.html, argument.js);\n                });\n            }).catch(e => {\n                console.error(e)\n            })\n\n        }.bind(this);\n\n        window.closeIssuesPane = function () {\n            if (!hidden)\n                lol();\n        };\n\n        window.lol = function togglePane() {\n            $('.qtracker-container').toggleClass('push-pane-over');\n            $('#issues-pane').toggleClass(\"show\");\n            hidden = !hidden;\n        };\n    }\n\n    /**\n     *\n     * @param {*} issueData\n     * @return Promise\n     */\n    async addIssueItem(issueData, userData) {\n        // Fetch user data.\n        let issueurl = url.relativeUrl('/local/qtracker/issue.php', {\n            courseid: this.courseid,\n            issueid: issueData.id,\n        });\n        let userurl = url.relativeUrl('/user/view.php', {\n            course: this.courseid,\n            id: userData.id,\n        });\n\n        //Render issues pane\n        let paneContext = {\n            issueurl: issueurl,\n            userurl: userurl,\n            profileimageurl: userData.profileimageurlsmall,\n            fullname: userData.fullname,\n            timecreated: issueData.timecreated,\n            title: issueData.title,\n            description: issueData.description,\n        };\n        let state = issueData.state;\n        paneContext[state] = true;\n\n        return Templates.render('local_qtracker/issues_pane_item', paneContext)\n            .then(function (html, js) {\n                return { html: html, js: js };\n            });\n    }\n\n    async loadIssues(id, state = null) {\n        let criteria = [\n            { key: 'questionid', value: id },\n        ];\n        if (state) {\n            criteria.push({ key: 'state', value: state });\n        }\n        let issuesData = await Ajax.call([{\n            methodname: 'local_qtracker_get_issues',\n            args: { criteria: criteria }\n        }])[0];\n\n        return issuesData;\n    }\n\n    async loadUsersData(ids) {\n        let usersData = await Ajax.call([{\n            methodname: 'core_user_get_users_by_field',\n            args: {\n                field: 'id',\n                values: ids\n            }\n        }])[0];\n        return usersData;\n    }\n\n    getQuestionEditUrl(courseid, questionid) {\n        let returnurl = encodeURIComponent(location.pathname + location.search);\n        let editurl = url.relativeUrl('/question/question.php', {\n            courseid: courseid,\n            id: questionid,\n            returnurl: returnurl,\n        });\n        return editurl;\n    }\n\n    decodeHTML(html) {\n        var doc = new DOMParser().parseFromString(html, \"text/html\");\n        return doc.documentElement.textContent;\n    }\n\n    async loadQuestionData(id) {\n        let userData = await Ajax.call([{\n            methodname: 'local_qtracker_get_question',\n            args: {\n                id: id\n            }\n        }])[0];\n        return userData;\n    }\n}\n\nexport default QuestionsTable;\n"],"file":"questions_table.min.js"}