{"version":3,"sources":["../src/issue.js"],"names":["define","$","Str","Ajax","Issue","id","slot","contextid","STATES","NEW","OPEN","CLOSED","prototype","title","description","isSaved","state","setId","getId","getSlot","getTitle","setTitle","getDescription","setDescription","changeState","getState","getContextid","load","call","methodname","args","issueid"],"mappings":"AAyBAA,OAAM,wBAAC,CAAC,QAAD,CAAW,UAAX,CAAuB,WAAvB,CAAD,CAAsC,SAAUC,CAAV,CAAaC,CAAb,CAAkBC,CAAlB,CAAwB,CAUhE,GAAIC,CAAAA,CAAK,CAAG,UAA6C,IAAnCC,CAAAA,CAAmC,wDAA9B,IAA8B,CAAxBC,CAAwB,wDAAjB,IAAiB,CAAXC,CAAW,wCACrD,KAAKF,EAAL,CAAUA,CAAV,CACA,KAAKC,IAAL,CAAYA,CAAZ,CACA,KAAKC,SAAL,CAAiBA,CACpB,CAJD,CAMAH,CAAK,CAACI,MAAN,CAAe,CACXC,GAAG,CAAE,KADM,CAEXC,IAAI,CAAE,MAFK,CAGXC,MAAM,CAAE,QAHG,CAAf,CAUAP,CAAK,CAACQ,SAAN,CAAgBP,EAAhB,CAAqB,IAArB,CAMAD,CAAK,CAACQ,SAAN,CAAgBN,IAAhB,CAAuB,IAAvB,CAMAF,CAAK,CAACQ,SAAN,CAAgBC,KAAhB,CAAwB,EAAxB,CAMAT,CAAK,CAACQ,SAAN,CAAgBE,WAAhB,CAA8B,EAA9B,CAEAV,CAAK,CAACQ,SAAN,CAAgBL,SAAhB,CAA4B,IAA5B,CAEAH,CAAK,CAACQ,SAAN,CAAgBG,OAAhB,IAEAX,CAAK,CAACQ,SAAN,CAAgBI,KAAhB,CAAwBZ,CAAK,CAACI,MAAN,CAAaC,GAArC,CASAL,CAAK,CAACQ,SAAN,CAAgBK,KAAhB,CAAwB,SAAUZ,CAAV,CAAc,CAClC,KAAKA,EAAL,CAAUA,CACb,CAFD,CAWAD,CAAK,CAACQ,SAAN,CAAgBM,KAAhB,CAAwB,UAAY,CAChC,MAAO,MAAKb,EACf,CAFD,CAIAD,CAAK,CAACQ,SAAN,CAAgBO,OAAhB,CAA0B,UAAY,CAClC,MAAO,MAAKb,IACf,CAFD,CAIAF,CAAK,CAACQ,SAAN,CAAgBQ,QAAhB,CAA2B,UAAY,CACnC,MAAO,MAAKP,KACf,CAFD,CAIAT,CAAK,CAACQ,SAAN,CAAgBS,QAAhB,CAA2B,SAAUR,CAAV,CAAiB,CACxC,KAAKA,KAAL,CAAaA,CAChB,CAFD,CAIAT,CAAK,CAACQ,SAAN,CAAgBU,cAAhB,CAAiC,UAAY,CACzC,MAAO,MAAKR,WACf,CAFD,CAKAV,CAAK,CAACQ,SAAN,CAAgBW,cAAhB,CAAiC,SAAUT,CAAV,CAAuB,CACpD,KAAKA,WAAL,CAAmBA,CACtB,CAFD,CAIAV,CAAK,CAACQ,SAAN,CAAgBY,WAAhB,CAA8B,SAAUR,CAAV,CAAiB,CAC3C,KAAKA,KAAL,CAAaA,CAChB,CAFD,CAIAZ,CAAK,CAACQ,SAAN,CAAgBa,QAAhB,CAA2B,UAAY,CACnC,MAAO,MAAKT,KACf,CAFD,CAIAZ,CAAK,CAACQ,SAAN,CAAgBc,YAAhB,CAA+B,UAAY,CACvC,MAAO,MAAKnB,SACf,CAFD,CAOAH,CAAK,CAACuB,IAAN,CAAa,SAAUtB,CAAV,CAAc,CACvB,MAAOF,CAAAA,CAAI,CAACyB,IAAL,CAAU,CACb,CAAEC,UAAU,CAAE,0BAAd,CAA0CC,IAAI,CAAE,CAAEC,OAAO,CAAE1B,CAAX,CAAhD,CADa,CAAV,EAEJ,CAFI,CAGV,CAJD,CAMA,MAAOD,CAAAA,CACV,CArHK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module for representing a question issue.\n *\n * @module     local_qtracker/Issue\n * @class      Issue\n * @package    local_qtracker\n * @author     Andr√© Storhaug <andr3.storhaug@gmail.com>\n * @copyright  2020 NTNU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/ajax'], function ($, Str, Ajax) {\n\n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var Issue = function (id = null, slot = null, contextid) {\n        this.id = id;\n        this.slot = slot;\n        this.contextid = contextid;\n    };\n\n    Issue.STATES = {\n        NEW: \"new\",\n        OPEN: \"open\",\n        CLOSED: \"closed\",\n    }\n\n    /**\n     * @var {int} id The id of this issue\n     * @private\n     */\n    Issue.prototype.id = null;\n\n    /**\n     * @var {int} id The slot for this issue\n     * @private\n     */\n    Issue.prototype.slot = null;\n\n    /**\n     * @var {string} title The title for this issue\n     * @private\n     */\n    Issue.prototype.title = \"\";\n\n    /**\n     * @var {string} title The description for this issue\n     * @private\n     */\n    Issue.prototype.description = \"\";\n\n    Issue.prototype.contextid = null;\n\n    Issue.prototype.isSaved = false;\n\n    Issue.prototype.state = Issue.STATES.NEW;\n\n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    Issue.prototype.setId = function (id) {\n        this.id = id;\n    };\n\n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    Issue.prototype.getId = function () {\n        return this.id;\n    };\n\n    Issue.prototype.getSlot = function () {\n        return this.slot;\n    };\n\n    Issue.prototype.getTitle = function () {\n        return this.title;\n    };\n\n    Issue.prototype.setTitle = function (title) {\n        this.title = title;\n    };\n\n    Issue.prototype.getDescription = function () {\n        return this.description;\n    };\n\n\n    Issue.prototype.setDescription = function (description) {\n        this.description = description;\n    };\n\n    Issue.prototype.changeState = function (state) {\n        this.state = state;\n    };\n\n    Issue.prototype.getState = function () {\n        return this.state;\n    };\n\n    Issue.prototype.getContextid = function () {\n        return this.contextid;\n    };\n\n    /**\n     * return {Promise}\n     */\n    Issue.load = function (id) {\n        return Ajax.call([\n            { methodname: 'local_qtracker_get_issue', args: { issueid: id} }\n        ])[0];\n    };\n\n    return Issue;\n});\n"],"file":"issue.min.js"}