/**
 * Manager for a Question Tracker Block form.
 *
 * @module     local_qtracker/BlockFormManager
 * @class      BlockFormManager
 * @package    local_qtracker
 * @author     Andr√© Storhaug <andr3.storhaug@gmail.com>
 * @copyright  2020 NTNU
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_qtracker/block_form_manager",["jquery","core/str","core/templates","core/ajax","local_qtracker/issue","local_qtracker/issue_manager"],(function($,Str,Templates,Ajax,Issue,IssueManager){var SELECTORS_SLOT='[name="slot"]',SELECTORS_SLOT_SELECT_OPTION='[name="slot"] option',SELECTORS_TITLE='[name="issuetitle"]',SELECTORS_DESCRIPTION='[name="issuedescription"]',SELECTORS_SUBMIT_BUTTON='button[type="submit"]',SELECTORS_DELETE_BUTTON="#qtracker-delete";let VALIDATION_ELEMENTS=[SELECTORS_TITLE,SELECTORS_DESCRIPTION];var notificationTimeoutHandle=null,BlockFormManager=function(selector,issueids,contextid){this.contextid=contextid,this.form=$(selector),this.form.closest(".card-text").prepend('<span class="notifications" id="qtracker-notifications"></span>'),this.issueManager=new IssueManager,this.init(JSON.parse(issueids))};return BlockFormManager.prototype.form=null,BlockFormManager.prototype.contextid=-1,BlockFormManager.prototype.issueid=null,BlockFormManager.prototype.issues=[],BlockFormManager.prototype.issueManager=null,BlockFormManager.prototype.init=function(){let issueids=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],slots=$(SELECTORS_SLOT_SELECT_OPTION);0==slots.length&&(slots=$(SELECTORS_SLOT)),slots.map(((index,option)=>{let issue=new Issue(null,parseInt(option.value),this.contextid);issue.isSaved=!1,this.issueManager.addIssue(issue)})),this.issueManager.loadIssues(issueids).then((()=>{var formData=new FormData(this.form[0]);this.issueManager.setActiveIssue(parseInt(formData.get("slot"))),this.reflectFormState(),this.form.find(SELECTORS_TITLE).change((event=>{this.issueManager.getActiveIssue().setTitle(event.target.value)})),this.form.find(SELECTORS_DESCRIPTION).change((event=>{this.issueManager.getActiveIssue().setDescription(event.target.value)})),this.form.find(SELECTORS_SLOT).change(this.handleSlotChange.bind(this)),this.form.on("submit",this.submitFormAjax.bind(this))})).catch((error=>{console.error(error)}))},BlockFormManager.prototype.handleSlotChange=function(e){this.issueManager.setActiveIssue(parseInt(e.target.value)),this.reflectFormState(),this.resetValidation()},BlockFormManager.prototype.reflectFormState=function(){let issue=this.issueManager.getActiveIssue();!0===issue.isSaved?(this.toggleDeleteButton(!0),this.toggleUpdateButton(!0)):!1===issue.isSaved&&this.clearForm(),this.restoreForm()},BlockFormManager.prototype.handleFormSubmissionResponse=function(response){Y.use("moodle-core-formchangechecker",(function(){M.core_formchangechecker.reset_form_dirty_state()})),this.issueManager.getActiveIssue().setId(response.issueid)},BlockFormManager.prototype.handleFormSubmissionFailure=function(response){console.error("An error occured"),console.error(response)},BlockFormManager.prototype.clearForm=function(){this.form.find("#qtracker-delete").remove(),this.resetValidation(),Str.get_string("submitnewissue","local_qtracker").then(function(string){this.form.find('button[type="submit"]').html(string)}.bind(this))},BlockFormManager.prototype.restoreForm=function(){let issue=this.issueManager.getActiveIssue();this.form.find('[name="issuetitle"]').val(issue.getTitle()),this.form.find('[name="issuedescription"]').val(issue.getDescription())},BlockFormManager.prototype.editIssue=function(){var formData=new FormData(this.form[0]);Ajax.call([{methodname:"local_qtracker_edit_issue",args:{issueid:this.issueManager.getActiveIssue().getId(),issuetitle:formData.get("issuetitle"),issuedescription:formData.get("issuedescription")},done:function(response){Str.get_string("issueupdated","local_qtracker").then(function(string){let notification={message:string,announce:!0,type:"success"};this.notify(notification)}.bind(this)),this.handleFormSubmissionResponse(response)}.bind(this),fail:this.handleFormSubmissionFailure.bind(this)}])},BlockFormManager.prototype.deleteIssue=function(){Ajax.call([{methodname:"local_qtracker_delete_issue",args:{issueid:this.issueManager.getActiveIssue().getId()},done:function(){Str.get_string("issuedeleted","local_qtracker").then(function(string){let notification={message:string,announce:!0,type:"success"};this.notify(notification)}.bind(this)),this.issueManager.getActiveIssue().isSaved=!1,this.clearForm()}.bind(this),fail:this.handleFormSubmissionFailure.bind(this)}])},BlockFormManager.prototype.createIssue=function(){var formData=new FormData(this.form[0]);Ajax.call([{methodname:"local_qtracker_new_issue",args:{qubaid:formData.get("qubaid"),slot:formData.get("slot"),contextid:this.contextid,issuetitle:formData.get("issuetitle"),issuedescription:formData.get("issuedescription")},done:function(response){Str.get_string("issuecreated","local_qtracker").then(function(string){let notification={message:string,announce:!0,type:"success"};this.notify(notification)}.bind(this)),this.issueManager.getActiveIssue().isSaved=!0,this.toggleUpdateButton(!0),this.toggleDeleteButton(!0),this.handleFormSubmissionResponse(response)}.bind(this),fail:this.handleFormSubmissionFailure.bind(this)}])},BlockFormManager.prototype.cancelNotificationTimer=function(){notificationTimeoutHandle&&clearTimeout(notificationTimeoutHandle),notificationTimeoutHandle=null},BlockFormManager.prototype.notify=function(notification){notification=$.extend({closebutton:!0,announce:!0,type:"error",extraclasses:"show"},notification);this.cancelNotificationTimer();let template={success:"core/notification_success",info:"core/notification_info",warning:"core/notification_warning",error:"core/notification_error"}[notification.type];Templates.render(template,notification).then(((html,js)=>{$("#qtracker-notifications").html(html),Templates.runTemplateJS(js),notificationTimeoutHandle=setTimeout((()=>{$("#qtracker-notifications").find(".alert").alert("close")}),7500)})).catch((error=>{throw console.error(error),error}))},BlockFormManager.prototype.toggleUpdateButton=function(show){show?Str.get_string("update","core").then(function(updateStr){this.form.find(SELECTORS_SUBMIT_BUTTON).html(updateStr)}.bind(this)):Str.get_string("submitnewissue","local_qtracker").then(function(updateStr){this.form.find(SELECTORS_SUBMIT_BUTTON).html(updateStr)}.bind(this))},BlockFormManager.prototype.toggleDeleteButton=function(show){const context={type:"button",classes:"col-auto",label:"Delete",id:"qtracker-delete"};let deleteButton=this.form.find(SELECTORS_DELETE_BUTTON);0==deleteButton.length&&show?Templates.render("local_qtracker/button",context).then(function(html,js){var container=this.form.find("button").closest(".form-row");Templates.appendNodeContents(container,html,js),this.form.find("#qtracker-delete").on("click",function(){this.deleteIssue()}.bind(this))}.bind(this)):show?deleteButton.show():deleteButton.hide()},BlockFormManager.prototype.setAction=function(newaction){this.form.data("action",newaction)},BlockFormManager.prototype.submitFormAjax=function(e){e.preventDefault(),e.stopPropagation(),this.validateForm()&&(!0===this.issueManager.getActiveIssue().isSaved?this.editIssue():this.createIssue())},BlockFormManager.prototype.validateForm=function(){let valid=!0;return VALIDATION_ELEMENTS.forEach((selector=>{let element=this.form.find(selector);""!=element.val()&&element.prop("validity").valid?element.removeClass("is-invalid").addClass("is-valid"):(element.removeClass("is-valid").addClass("is-invalid"),valid=!1)})),valid},BlockFormManager.prototype.resetValidation=function(){VALIDATION_ELEMENTS.forEach((selector=>{this.form.find(selector).removeClass("is-invalid").removeClass("is-valid")}))},BlockFormManager.prototype.submitForm=function(e){e.preventDefault(),this.form.submit()},{init:function(selector,issueids,contextid){return new BlockFormManager(selector,issueids,contextid)}}}));

//# sourceMappingURL=block_form_manager.min.js.map