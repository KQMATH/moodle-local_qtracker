{"version":3,"file":"dropdown.min.js","sources":["../src/dropdown.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manager for managing table of questions with issues.\n *\n * @module     local_qtracker/Dropdown\n * @class      Dropdown\n * @package    local_qtracker\n * @author     Andr√© Storhaug <andr3.storhaug@gmail.com>\n * @copyright  2021 NTNU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport { get_string as getString } from 'core/str';\nimport DropdownEvents from 'local_qtracker/dropdown_events';\nimport { loadIssuesData } from 'local_qtracker/api_helpers';\n\nvar SELECTORS = {\n    DROPDOWN: '[data-region=\"dropdown\"]',\n    SEARCH: 'input[type=\"search\"]',\n    ITEM: '[data-region=\"item\"]',\n};\n\n/**\n * Constructor\n * @constructor\n * @param {String} selector used to find triggers for the new group modal.\n * @param {int} contextid\n *\n * Each call to init gets it's own instance of this class.\n */\nclass Dropdown {\n    loading = null;\n    root = null;\n    items = new Map();\n    activeItems = new Map();\n    isSearching = false;\n\n    constructor(root, search = true) {\n        this.root = $(root); // Root element dropdown-menu\n        this.dropdown = this.root.find(SELECTORS.DROPDOWN);\n        this.search = search;\n\n        this.render = this.renderItems.bind(this);\n        this.registerEventListeners = this.registerEventListeners.bind(this);\n\n        if (this.search) {\n            this.registerEventListeners();\n        }\n    }\n\n\n\n    /**\n     * Get the dropdown element of this dropdown.\n     *\n     * @method getDropdown\n     * @return {object} jQuery object\n     */\n    getDropdown() {\n        return this.dropdown;\n    };\n\n    /**\n     * Get the dropdown element of this dropdown.\n     *\n     * @method getDropdown\n     * @return {object} jQuery object\n     */\n    getRoot() {\n        return this.root;\n    };\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    registerEventListeners() {\n        // Handle the clicking of an item.\n        this.getDropdown().on('click', SELECTORS.ITEM, function (e) {\n            let element = $(e.currentTarget);\n            if (element.hasClass(\"disabled\")) {\n                return;\n            }\n            var clickEvent = $.Event(DropdownEvents.click);\n            this.getRoot().trigger(clickEvent, [element]);\n\n            if (!clickEvent.isDefaultPrevented()) {\n                e.preventDefault();\n            }\n        }.bind(this));\n\n        this.registerSearchListener();\n    }\n\n\n    /**\n     * Register a listener to close the dialogue when the save button is pressed.\n     *\n     * @method registerSearch\n     */\n    registerSearchListener() {\n\n        this.getDropdown().find(SELECTORS.SEARCH).on('input', function (e) {\n\n            let str = $(e.target).val();\n            var searchEvent = $.Event(DropdownEvents.search, str);\n            this.getRoot().trigger(searchEvent, [str]);\n\n            if (!searchEvent.isDefaultPrevented()) {\n                e.preventDefault();\n                if (str.length > 0) {\n                    this.isSearching = true;\n                } else {\n                    this.isSearching = false;\n                }\n                this.renderItems();\n            }\n        }.bind(this));\n    };\n\n\n    getActiveItems() {\n\n        return this.activeItems;\n    }\n\n    setItemStatus(key, active = true) {\n        if (active) {\n            let item = this.getItems().get(key);\n            this.activeItems.set(key, item);\n        } else {\n            this.activeItems.delete(key);\n        }\n    }\n\n    reset() {\n        this.isSearching = false;\n        this.getDropdown().find(SELECTORS.SEARCH).val(\"\");\n        this.renderItems()\n    }\n\n    async render() {\n        let context = {\n            trigger: {\n                \"key\": \"fa-times\",\n                \"title\": \"Close\",\n                \"alt\": \"Close pane\",\n                \"extraclasses\": \"\",\n                \"unmappedIcon\": false\n            }\n        };\n        //let self = this;\n        await Templates.render('local_qtracker/dropdown', context).then((html, js) => {\n            Templates.replaceNodeContents(this.getDropdown(), html, js);\n        });\n    }\n\n    async generateItems() {\n        let elements = [];\n        let items = this.isSearching ? this.getItems() : this.getActiveItems();\n        if (items.size === 0) {\n            let element = $('<div></div>')\n                .addClass(\"dropdown-item disabled\")\n                .attr(\"data-region\", 'item')\n                .html(await getString('noitems', 'local_qtracker'))\n                .prop('outerHTML');\n            elements.push(element)\n        } else {\n            // map ;; index(id), html\n            items.forEach((html, key) => {\n                let element = $('<div></div>')\n                    .addClass(\"dropdown-item\")\n                    .addClass(() => {\n                        if (this.isActiveItem(key)) {\n                            return \"active\";\n                        }\n                    })\n                    .attr(\"data-value\", key)\n                    .attr(\"data-region\", 'item')\n                    .html(html).prop('outerHTML');\n                elements.push(element)\n            });\n        }\n        return elements;\n    }\n\n    async renderItems() {\n        this.empty();\n        let elements = await this.generateItems();\n        this.getDropdown().append(elements);\n        //<a class=\"dropdown-item\" data-value={{value}} href=\"#\">{{{text}}}</a>\n    }\n\n    /**\n     *\n     * @param {*} items tuples [id, html]\n     * @param {*} active\n     */\n    setItems(items, active = false) {\n        if (active) {\n            this.activeItems = new Map();\n            items.forEach(item => this.activeItems.set(item[0], item[1]));\n        } else {\n            this.items = new Map();\n            items.forEach(item => this.items.set(item[0], item[1]));\n        }\n    }\n\n    getItems() {\n        return this.items;\n    }\n\n    getAllItems() {\n        return Array.prototype.concat(this.items, this.getActiveItems());\n    }\n\n    isActiveItem(key) {\n        return this.getActiveItems().has(key);\n    }\n\n    async search(str) {\n        if (str.length > 0) {\n            this.isSearching = true;\n        } else {\n            this.isSearching = false;\n        }\n\n        let criteria = [];\n        if (str.startsWith('#')) {\n            let id = parseInt(str.substr(1));\n            criteria.push({ key: 'id', value: id });\n        } else {\n            if (str.length > 2) str += \"%\"\n            criteria.push({ key: 'title', value: str });\n        }\n\n        let issuesResponse = await loadIssuesData(criteria);\n        let issues = issuesResponse.issues;\n        this.setItems(issues);\n        return issues;\n    }\n\n    setTitle(html) {\n        $('.qtracker-sidebar-title').html(html);\n    }\n\n    setLoading(show = true) {\n        if (show) {\n            $('.qtracker-sidebar-content .loading').addClass(\"show\");\n            this.loading = true;\n        } else {\n            $('.qtracker-sidebar-content .loading').removeClass(\"show\");\n            this.loading = false;\n        }\n    }\n\n    empty() {\n        this.getDropdown().find(SELECTORS.ITEM).remove();\n    }\n\n    addTemplateItem(html, js) {\n        Templates.appendNodeContents('.qtracker-sidebar-content .qtracker-items', html, js);\n    }\n\n    getElements() {\n        return $('.qtracker-sidebar-content .qtracker-items').children();\n    }\n\n}\n\nexport default Dropdown;\n"],"names":["SELECTORS","constructor","root","search","Map","dropdown","this","find","render","renderItems","bind","registerEventListeners","getDropdown","getRoot","on","e","element","currentTarget","hasClass","clickEvent","$","Event","DropdownEvents","click","trigger","isDefaultPrevented","preventDefault","registerSearchListener","str","target","val","searchEvent","length","isSearching","getActiveItems","activeItems","setItemStatus","key","item","getItems","get","set","delete","reset","Templates","then","html","js","replaceNodeContents","elements","items","size","addClass","attr","prop","push","forEach","isActiveItem","empty","generateItems","append","setItems","getAllItems","Array","prototype","concat","has","criteria","startsWith","id","parseInt","substr","value","issues","setTitle","setLoading","loading","removeClass","remove","addTemplateItem","appendNodeContents","getElements","children"],"mappings":"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"}