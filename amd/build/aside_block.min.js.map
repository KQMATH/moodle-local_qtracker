{"version":3,"sources":["../src/aside_block.js"],"names":["type","label","aside","AsideBlockManager","handleClicks","setup","menu","document","getElementById","searchfield","children","item","list","Error","element","innerHTML","cross","setAttribute","listelement","createElement","classList","add","ignorelength","length","index","id","slice","appendChild","checkmark","remove","i","chil","textContent","anchor","url","getAttribute","addEventListener","event","preventDefault","stopPropagation","console","log","deactivateElement","activateElement","invalids","listchild","child","svg"],"mappings":"qIAsMe,SAAcA,CAAd,CAAoBC,CAApB,CAA2B,CACtC,GAAIC,CAAAA,CAAK,CAAG,GAAIC,CAAAA,CAAJ,CAAsBH,CAAtB,CAA2BC,CAA3B,CAAZ,CACAC,CAAK,CAACE,YAAN,GACAF,CAAK,CAACG,KAAN,EACH,C,scAhLKF,CAAAA,C,YAmDF,WAAYH,CAAZ,CAAkBC,CAAlB,CAAyB,yBA7ClB,IA6CkB,uBAtCX,IAsCW,gBA/BlB,IA+BkB,gBAzBlB,IAyBkB,iBAnBjB,IAmBiB,iBAbjB,+MAaiB,qBAPb,sKAOa,EACrB,KAAKD,IAAL,CAAYA,CAAZ,CACA,KAAKC,KAAL,CAAaA,CAAb,CACA,KAAKK,IAAL,CAAYC,QAAQ,CAACC,cAAT,CAAwBR,CAAI,CAAC,MAA7B,CAAZ,CACA,KAAKS,WAAL,CAAmB,KAAKH,IAAL,CAAUI,QAAV,CAAmBC,IAAnB,CAAwB,CAAxB,CAAnB,CACA,KAAKC,IAAL,CAAYL,QAAQ,CAACC,cAAT,CAAwBR,CAAI,CAAC,MAA7B,CAAZ,CACA,GAAkB,IAAd,QAAKM,IAAT,CAAyB,CACrB,KAAM,IAAIO,CAAAA,KAAJ,CAAUb,CAAI,CAAC,sBAAf,CACT,CACD,GAAyB,IAArB,QAAKS,WAAT,CAA+B,CAC3B,KAAM,IAAII,CAAAA,KAAJ,CAAUb,CAAI,CAAC,6BAAf,CACT,CACD,GAAkB,IAAd,QAAKY,IAAT,CAAwB,CACpB,KAAM,IAAIC,CAAAA,KAAJ,CAAUb,CAAI,CAAC,sBAAf,CACT,CACJ,C,2DAMec,C,CAAS,CACrBA,CAAO,CAACJ,QAAR,CAAiBC,IAAjB,CAAsB,CAAtB,EAAyBI,SAAzB,CAAqC,KAAKC,KAA1C,CACAF,CAAO,CAACG,YAAR,CAAqB,YAArB,CAAmC,QAAnC,EACA,GAAIC,CAAAA,CAAW,CAAGX,QAAQ,CAACY,aAAT,CAAuB,KAAvB,CAAlB,CACAD,CAAW,CAACE,SAAZ,CAAsBC,GAAtB,CAA0B,iBAA1B,EAJqB,GAKjBC,CAAAA,CAAY,CAAG,CAAC,KAAKtB,IAAL,CAAU,UAAX,EAAuBuB,MALrB,CAMjBC,CAAK,CAAGV,CAAO,CAACW,EAAR,CAAWC,KAAX,CAAiBJ,CAAjB,CANS,CAOrBJ,CAAW,CAACH,SAAZ,CAAwBD,CAAO,CAACJ,QAAR,CAAiBC,IAAjB,CAAsB,CAAtB,EAAyBI,SAAjD,CACAG,CAAW,CAACO,EAAZ,CAAiB,KAAKzB,IAAL,CAAU,UAAV,CAAqBwB,CAAtC,CACA,KAAKZ,IAAL,CAAUe,WAAV,CAAsBT,CAAtB,CACH,C,4DAMiBJ,C,CAAS,CACvBA,CAAO,CAACJ,QAAR,CAAiBC,IAAjB,CAAsB,CAAtB,EAAyBI,SAAzB,CAAqC,KAAKa,SAA1C,CACAd,CAAO,CAACG,YAAR,CAAqB,YAArB,CAAmC,UAAnC,EAFuB,GAGnBK,CAAAA,CAAY,CAAG,CAAC,KAAKtB,IAAL,CAAU,UAAX,EAAuBuB,MAHnB,CAInBC,CAAK,CAAGV,CAAO,CAACW,EAAR,CAAWC,KAAX,CAAiBJ,CAAjB,CAJW,CAKvBf,QAAQ,CAACC,cAAT,CAAwB,KAAKR,IAAL,CAAU,UAAV,CAAqBwB,CAA7C,EAAoDK,MAApD,EAEH,C,2CAMsB,CAEnB,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAKlB,IAAL,CAAUF,QAAV,CAAmBa,MAAvC,CAA+CO,CAAC,EAAhD,CAAoD,CAChD,KAAKlB,IAAL,CAAUmB,IACb,CACJ,C,mDAKc,YACX,GAAI,KAAKzB,IAAL,CAAUI,QAAV,CAAmBC,IAAnB,CAAwB,CAAxB,EAA2BqB,WAA3B,EAA0C,MAAO,KAAK/B,KAA1D,CAAiE,OACjE,mBAAS6B,CAAT,KACQG,CAAAA,CAAM,CAAG,CAAI,CAAC3B,IAAL,CAAUI,QAAV,CAAmBC,IAAnB,CAAwBmB,CAAxB,CADjB,CAEQI,CAAG,CAAGD,CAAM,CAACE,YAAP,CAAoB,MAApB,CAFd,CAGIF,CAAM,CAACG,gBAAP,CAAwB,OAAxB,CAAiC,SAAAC,CAAK,CAAI,CACtCA,CAAK,CAACC,cAAN,GACAD,CAAK,CAACE,eAAN,GACAC,OAAO,CAACC,GAAR,CAAYR,CAAZ,EACA,GAA0C,QAAtC,GAAAA,CAAM,CAACE,YAAP,CAAoB,YAApB,CAAJ,CAAoD,CAChD,CAAI,CAACO,iBAAL,CAAuBT,CAAvB,CACJ,CAFA,IAEM,CAEF,CAAI,CAACU,eAAL,CAAqBV,CAArB,CACH,CACJ,CAVD,IAHJ,EAASH,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAKxB,IAAL,CAAUI,QAAV,CAAmBa,MAAvC,CAA+CO,CAAC,EAAhD,CAAoD,GAA3CA,CAA2C,CA6BnD,CACJ,C,qCAKO,CAEJ,OADIc,CAAAA,CAAQ,CAAG,CACf,CAASd,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,KAAKxB,IAAL,CAAUI,QAAV,CAAmBa,MAAvC,CAA+CO,CAAC,EAAhD,CAAoD,IAC5Ce,CAAAA,CAAS,CAAG,KAAKjC,IAAL,CAAUF,QAAV,CAAmBC,IAAnB,CAAwBmB,CAAC,CAAC,CAA1B,CADgC,CAE5CgB,CAAK,CAAG,KAAKxC,IAAL,CAAUI,QAAV,CAAmBC,IAAnB,CAAwBmB,CAAxB,CAFoC,CAGhDe,CAAS,CAACpB,EAAV,CAAe,KAAKzB,IAAL,CAAU,UAAV,EAAsB8B,CAAC,CAAC,CAAxB,CAAf,CACAgB,CAAK,CAACrB,EAAN,CAAW,KAAKzB,IAAL,CAAU,UAAV,EAAsB8B,CAAC,CAAC,CAAxB,CAAX,CACA,GAAwC,QAApC,EAAAgB,CAAK,CAACX,YAAN,CAAmB,YAAnB,CAAJ,CAAkD,CAC9C,GAAIY,CAAAA,CAAG,CAAGD,CAAK,CAACpC,QAAN,CAAeC,IAAf,CAAoB,CAApB,CAAV,CACAoC,CAAG,CAAChC,SAAJ,CAAgB,KAAKa,SAArB,CACA,KAAKhB,IAAL,CAAUF,QAAV,CAAmBC,IAAnB,CAAwBmB,CAAC,CAAC,CAAF,CAAIc,CAA5B,EAAsCf,MAAtC,GACAe,CAAQ,EAAI,CACf,CACJ,CACJ,C","sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Class to handle aside blocks\n *\n * @module     local_qtracker/AsideBlock\n * @class      AsideBlockManager\n * @package    local_qtracker\n * @author     David Rise Knotten <david_knotten@hotmail.no>\n * @copyright  2021 NTNU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nclass AsideBlockManager {\n    /**\n     * Pointer to the menu element the aside block manager handles\n     * @type {element}\n     * @private\n     */\n    menu = null;\n\n    /**\n     * Pointer to the searchfield element the aside block manager handles\n     * @type {element}\n     * @private\n     */\n    searchfield = null;\n\n    /**\n     * Pointer to the list element the aside block manager handles\n     * @type {element}\n     * @private\n     */\n    list = null;\n\n    /**\n     * The name of the item type the aside block manager handles\n     * @type {?string}\n     */\n    type = null;\n\n    /**\n     * The label of the item type the aside block manager handles\n     * @type {?string}\n     */\n    label = null;\n\n    /**\n     * SVG path to draw a cross symbol\n     * @type {string}\n     */\n    cross = '<path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>';\n\n    /**\n     * SVG path to draw a checkmark\n     * @type {string}\n     */\n    checkmark = '<path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\"/>';\n\n    /**\n     * AsideBlockManager constructor\n     * @param type {string} the type of the item\n     * @param label {string} the items label\n     */\n    constructor(type, label) {\n        this.type = type;\n        this.label = label\n        this.menu = document.getElementById(type+'menu');\n        this.searchfield = this.menu.children.item(0);\n        this.list = document.getElementById(type+'list');\n        if( this.menu === null ) {\n            throw new Error(type+' menu does not exist')\n        }\n        if( this.searchfield === null) {\n            throw new Error(type+' searchfield does not exist')\n        }\n        if( this.list === null) {\n            throw new Error(type+' list does not exist')\n        }\n    }\n\n    /**\n     * Method to set an item to enabled and add to the list\n     * @param {element} element the element to activate\n     */\n    activateElement(element) {\n        element.children.item(0).innerHTML = this.cross;\n        element.setAttribute('data-state', 'active');\n        let listelement = document.createElement('div');\n        listelement.classList.add('list-group-item');\n        let ignorelength = (this.type+'menuitem').length;\n        let index = element.id.slice(ignorelength);\n        listelement.innerHTML = element.children.item(1).innerHTML;\n        listelement.id = this.type+'listitem'+index;\n        this.list.appendChild(listelement);\n    }\n\n    /**\n     * Method to set an item to disabled and remove from the list\n     * @param {element} element the element to deactivate\n     */\n    deactivateElement(element) {\n        element.children.item(0).innerHTML = this.checkmark;\n        element.setAttribute('data-state', 'inactive');\n        let ignorelength = (this.type+'menuitem').length;\n        let index = element.id.slice(ignorelength);\n        document.getElementById(this.type+'listitem'+index).remove();\n\n    }\n\n    /**\n     *\n     * @param {int} ignorelength\n     */\n    sortlist(ignorelength) {\n        //TODO sort list\n        for (let i = 0; i < this.list.children.length; i++) {\n            this.list.chil\n        }\n    }\n\n    /**\n     * Catches and overrides the handling of clicks to all items in the dropdown menu\n     */\n    handleClicks() {\n        if (this.menu.children.item(2).textContent == 'no '+ this.label) return;\n        for (let i = 2; i < this.menu.children.length; i++) {\n            let anchor = this.menu.children.item(i)\n            let url = anchor.getAttribute('href');\n            anchor.addEventListener('click', event => {\n                event.preventDefault();\n                event.stopPropagation();\n                console.log(anchor);\n                if (anchor.getAttribute('data-state') === 'active') {\n                    this.deactivateElement(anchor);\n               } else {\n\n                    this.activateElement(anchor);\n                }\n            }, true);\n            /*\n            anchor.addEventListener('click',(event) => {\n                event.preventDefault();\n\n                fetch(url, {\n                    method: 'POST'\n                }).then(response => {\n                    return response.json();\n                }).then(response => {\n                    //TODO handle stuff\n                }).catch(error => {\n                    //TODO handle errors\n                });\n            },false);\n            */\n        }\n    };\n\n    /**\n     * Initializes the list and ensures that items are correctly hidden/not hidden\n     */\n    setup() {\n        let invalids = 0;\n        for (let i = 2; i < this.menu.children.length; i++) {\n            let listchild = this.list.children.item(i-2);\n            let child = this.menu.children.item(i);\n            listchild.id = this.type+'listitem'+(i-2);\n            child.id = this.type+'menuitem'+(i-2);\n            if (child.getAttribute('data-state') != 'active') {\n                let svg = child.children.item(0);\n                svg.innerHTML = this.checkmark;\n                this.list.children.item(i-2-invalids).remove();\n                invalids += 1;\n            }\n        }\n    }\n\n}\n\n\n/**\n * Initializes an aside block manager\n * @param type {string} the type of the item\n * @param label {string} the items label\n */\nexport default function init(type, label) {\n    let aside = new AsideBlockManager(type,label);\n    aside.handleClicks();\n    aside.setup();\n};\n\n\n\n"],"file":"aside_block.min.js"}