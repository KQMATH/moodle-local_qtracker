{"version":3,"sources":["../src/questions_table_page.js"],"names":["QuestionsTablePage","courseid","sidebar","Sidebar","init","render","window","showIssuesInPane","id","state","empty","setLoading","loadQuestionData","questionData","question","questionEditUrl","getQuestionEditUrl","link","attr","html","name","setTitle","show","loadIssues","issuesResponse","issues","userids","Set","map","issue","userid","loadUsersData","usersData","promises","forEach","issueData","userData","find","push","addIssueItem","self","$","when","apply","done","each","arguments","index","argument","addTemplateItem","js","catch","e","console","error","bind","closeIssuesPane","hide","toggleIssuesPane","togglePane","issueurl","url","relativeUrl","issueid","userurl","course","paneContext","profileimageurl","profileimageurlsmall","fullname","timecreated","title","description","Templates","then","criteria","key","value","Ajax","call","methodname","args","issuesData","ids","field","values","questionid","returnurl","encodeURIComponent","location","pathname","search","editurl","doc","DOMParser","parseFromString","documentElement","textContent"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Class for handling page with table of questions with issues.\n *\n * @module     local_qtracker/QuestionsTablePage\n * @class      QuestionsTablePage\n * @package    local_qtracker\n * @author     Andr√© Storhaug <andr3.storhaug@gmail.com>\n * @copyright  2021 NTNU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport Ajax from 'core/ajax';\nimport url from 'core/url';\nimport Sidebar from 'local_qtracker/sidebar';\n\n/**\n * Constructor\n * @constructor\n * @param {String} selector used to find triggers for the new group modal.\n * @param {int} contextid\n *\n * Each call to init gets it's own instance of this class.\n */\nclass QuestionsTablePage {\n    courseid = null;\n\n    constructor(courseid) {\n        this.courseid = courseid;\n        this.sidebar = new Sidebar('#questions-table-sidebar', false, \"right\", false, '40%');\n        this.init();\n    }\n\n    async init() {\n\n        await this.sidebar.render();\n        window.showIssuesInPane = async function (id, state = null) {\n            this.sidebar.empty();\n            this.sidebar.setLoading(true);\n\n            // Get question title.\n            let questionData = await this.loadQuestionData(id);\n            let question = questionData.question;\n            let questionEditUrl = this.getQuestionEditUrl(this.courseid, id);\n            let link = $('<a></a>').attr(\"href\", questionEditUrl).html(question.name + \" #\" + question.id);\n            this.sidebar.setTitle(link);\n            this.sidebar.show();\n\n            // Get issues data.\n            let issuesResponse = await this.loadIssues(id, state);\n            let issues = issuesResponse.issues;\n\n            // Get users data.\n            let userids = [...new Set(issues.map(issue => issue.userid))];\n            let usersData = await this.loadUsersData(userids);\n\n            // Render issue items.\n            let promises = [];\n            issues.forEach(async issueData => {\n                let userData = usersData.find(({ id }) => id === issueData.userid);\n                promises.push(this.addIssueItem(issueData, userData));\n            });\n\n            self = this;\n            // When all issue item promises are resolved.\n            $.when.apply($, promises).done(function () {\n                self.sidebar.setLoading(false);\n                $.each(arguments, (index, argument) => {\n                    self.sidebar.addTemplateItem(argument.html, argument.js);\n                });\n            }).catch(e => {\n                console.error(e);\n            });\n\n        }.bind(this);\n\n        window.closeIssuesPane = function () { this.sidebar.hide() }.bind(this);\n        window.toggleIssuesPane = function () { this.sidebar.togglePane() }.bind(this);\n\n    }\n\n    /**\n     *\n     * @param {object} issueData\n     * @param {object} userData\n     * @return {Promise}\n     */\n    async addIssueItem(issueData, userData) {\n        // Fetch user data.\n        let issueurl = url.relativeUrl('/local/qtracker/issue.php', {\n            courseid: this.courseid,\n            issueid: issueData.id,\n        });\n        let userurl = url.relativeUrl('/user/view.php', {\n            course: this.courseid,\n            id: userData.id,\n        });\n\n        // Render issues pane\n        let paneContext = {\n            issueurl: issueurl,\n            userurl: userurl,\n            profileimageurl: userData.profileimageurlsmall,\n            fullname: userData.fullname,\n            timecreated: issueData.timecreated,\n            id: issueData.id,\n            title: issueData.title,\n            description: issueData.description,\n        };\n        let state = issueData.state;\n        paneContext[state] = true;\n\n        return Templates.render('local_qtracker/sidebar_item_issue', paneContext)\n            .then(function (html, js) {\n                return { html: html, js: js };\n            });\n    }\n\n    async loadIssues(id, state = null) {\n        let criteria = [\n            { key: 'questionid', value: id },\n        ];\n        if (state) {\n            criteria.push({ key: 'state', value: state });\n        }\n        let issuesData = await Ajax.call([{\n            methodname: 'local_qtracker_get_issues',\n            args: { criteria: criteria }\n        }])[0];\n\n        return issuesData;\n    }\n\n    async loadUsersData(ids) {\n        let usersData = await Ajax.call([{\n            methodname: 'core_user_get_users_by_field',\n            args: {\n                field: 'id',\n                values: ids\n            }\n        }])[0];\n        return usersData;\n    }\n\n    getQuestionEditUrl(courseid, questionid) {\n        let returnurl = encodeURIComponent(location.pathname + location.search);\n        let editurl = url.relativeUrl('/question/question.php', {\n            courseid: courseid,\n            id: questionid,\n            returnurl: returnurl,\n        });\n        return editurl;\n    }\n\n    decodeHTML(html) {\n        var doc = new DOMParser().parseFromString(html, \"text/html\");\n        return doc.documentElement.textContent;\n    }\n\n    async loadQuestionData(id) {\n        let userData = await Ajax.call([{\n            methodname: 'local_qtracker_get_question',\n            args: {\n                id: id\n            }\n        }])[0];\n        return userData;\n    }\n}\n\nexport default QuestionsTablePage;\n"],"file":"questions_table_page.min.js"}